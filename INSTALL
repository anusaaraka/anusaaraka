 1. Pre requisites:
    ==============

     English-Hindi Anusaaraka requires the following resources.
       -- Java 1.8.0 
       -- perl,
       -- python,
       -- flex,
       -- bison, 
       -- lttoolbox 3.1 or above
       -- apertium 3.1 or above
       -- xsltproc
       -- libgdbm5, 
       -- libgdbm-dev (to use gdbm),
       -- libicu-dev (for uconv) 
       -- gcc,
       -- g++ ,  
       -- ant ( Anusaaraka will run without ant also so one can ignore the errors found while compiling it )
       -- timeout (Please note that recent coreutils (>= 7.5-1) provide a timeout binary in it)  
          (this command is used to exit the CLIPS environment in the specific time.)
       -- Stanford Parser (Check README present in anusaaraka/Parsers/stanford-parser/README)
       -- Ace Parser (optional, if needed check Readme_to_install_ace_parser.txt present in anusaaraka/Parsers/ace-parser)
     (NOTE: Anusaaraka uses 'bash' instead of 'dash')
--------------------------------------------------------------------------------------------------------------
 2. Install:
    ========

     To install anusaaraka from the source code, run

        To Extract tar , Run::
	tar -xvzf <file name>  (Ex : tar -xvzf anusaaraka.tgz)
			or
	To clone from bitbucket repository::
	git clone https://bitbucket.org/anusaaraka/anusaaraka.git


        Add following line to your ~/.bash_profile (or) ~/.bashrc  and then run source ~/.bashrc
        ========================================================================================

        export HOME_anu_test=path_of_anu_installation
        export HOME_anu_output=path_for_anu_output
        export HOME_anu_tmp=path_for_tmp_dir
        export HOME_anu_provisional_wsd_rules=path_for_user_wsd_rules(provisional_wsd_rules)
        
        export PATH=path for jdk1.8.0_25/bin and $HOME_anu_test/bin
        export JAVA_HOME=path for jdk1.8.0_25
	export http_proxy=path for proxy settings
        export LD_LIBRARY_PATH=/usr/local/lib/    ( for Shared libraries )
        
        (Note : User can create provisional_wsd_rules directory to write their own wsd rules and set the path for 
	        provisional_wsd_rules)

 
        Ex:
        ==

        export HOME_anu_test=$HOME/anusaaraka
        export HOME_anu_output=$HOME/anu_output
	export HOME_anu_tmp=$HOME/tmp_anu_dir
	export HOME_anu_provisional_wsd_rules=$HOME/provisional_wsd_rules

        export PATH=$HOME/jdk1.8.0_25/bin:$HOME_anu_test/bin:$PATH
        export JAVA_HOME=$HOME/jdk1.8.0_25
        export LD_LIBRARY_PATH=/usr/local/lib/
	export http_proxy=http://proxy.iiit.ac.in:8080

        compile:
        ========

        cd anusaaraka
	sh shell_scripts/anu_compile.sh

      Note :: Please run  remove_out-files.sh before recompiling.
----------------------------------------------------------------------------------------------------------------
3. To remove out files  :   shell_scripts/remove_out-files.sh
-----------------------------------------------------------------------------------------------------------------   
4. How to run Anusaaraka:
   =====================

	i. Copy the below text in a file "sample"
           This is a sample file for anusaaraka.
       ii. Anusaaraka_stanford.sh  sample

   User has an option to use provisional directory.
     To use  :	Anusaaraka_stanford.sh  sample 0 True
        NOTE::  Where '0' is default parse

   To run Domain specific 
	Ex : To run Anusaaraka for "physics" domain then
		Anusaaraka_stanford.sh  sample 0 True physics
		[ Note : sample is file name , 0 for default parse , True is to use provisional and
	 	         physics is to define physics domain ]
-----------------------------------------------------------------------------------------------------------------
5. Output :
   ======

    The "tmp" directory is created for given input file. The facts for the particular sentences are stored in their 
    respective directories.  (Ex: for second paragraph first sentence tmp/inputfile_tmp/2.1 dir )
    
    To view the facts :
           $HOME_anu_tmp/tmp/<file_name_tmp>/<sentence_no>/all_facts      Ex:  $HOME_anu_tmp/tmp/sample_tmp/2.1/all_facts  
       
    To view the output, open html file through a browser by the command :

             1)  firefox $HOME_anu_output/<filename_frame.html>
             Ex: firefox $HOME_anu_output/sample_frame.html  
	         This frame opens three different html files i.e; 
    				1) English file
                                2) Layered output according to English sentence
                                3) Hindi translation 

             2)  firefox $HOME_anu_output/<filename_tran_frame.html>
             Ex: firefox $HOME_anu_output/sample_tran_frame.html
                 This frame opens two different html files i.e;
                                1) English file
                                2) Layered output according to hindi translation 

             3)  firefox $HOME_anu_output/<filename.html>
             Ex: firefox $HOME_anu_output/sample.html
                 (Layered output according to English sentence i.e; In english word order)
               
             4)  firefox $HOME_anu_output/<filename_tran.html>
             Ex: firefox $HOME_anu_output/sample_tran.html
                 (Layered output according to hindi translation 1.e; In hindi word order)
 
             5)  firefox $HOME_anu_output/<filename_trnsltn.html>
             Ex: firefox $HOME_anu_output/sample_trnsltn.html
                 (Contains Hindi translated sentences)
-------------------------------------------------------------------------------------------------------------------
6. To run the sentence for partucular parse in Stanford parser :
   ----------------------------------------------------------
            Anusaaraka_stanford.sh  <file_name> <parse_number>
               Ex :  Anusaaraka_stanford.sh  sample 2    --- running sample file for second parse.
-------------------------------------------------------------------------------------------------------------------
